<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd" default-autowire="byName">
    <!-- 扫描注解 -->
    <context:component-scan base-package="com.bjsxt.*.service.impl"></context:component-scan>
    <!-- 加载属性文件 -->
    <context:property-placeholder location="classpath:db.properties"/>
    <!-- 创建数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    	<property name="driverClassName" value="${jdbc.driver}"></property>
    	<property name="url" value="${jdbc.url}"></property>
    	<property name="username" value="${jdbc.username}"></property>
    	<property name="password" value="${jdbc.password}"></property>
    </bean>
    <!-- 创建SqlSessionFactory对象 -->
    <!-- 如果开启全局byName自动注入.id一定不能叫做sqlSessionFactory,导致无法获取属性文件内容. -->
    <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- <property name="dataSource" ref="dataSource"></property> -->
    	<property name="typeAliasesPackage" value="com.bjsxt.pojo"></property>
    </bean>
    <!-- 创建Mapper扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="com.bjsxt.*.mapper"></property>
    	<property name="sqlSessionFactoryBeanName" value="factory"></property>
    </bean>
    <!-- 事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<!-- <property name="dataSource" ref="dataSource"></property> -->
   	</bean>
   	<!-- 配置声明式事务 -->
   	<tx:advice id="txAdvice" transaction-manager="txManager">
   		<tx:attributes>
   			<tx:method name="ins*" rollback-for="java.lang.Exception"/>
   			<tx:method name="del*" rollback-for="java.lang.Exception"/>
   			<tx:method name="upd*" rollback-for="java.lang.Exception"/>
   			<tx:method name="*" read-only="true"/>
   		</tx:attributes>
   	</tx:advice>
   	<!-- 配置AOP哪些方法有事务管理 -->
   	<aop:config>
   		<aop:pointcut expression="execution(* com.bjsxt.*.service.impl.*.*(..))" id="mypoint"/>
   		<aop:advisor advice-ref="txAdvice" pointcut-ref="mypoint"/>
   	</aop:config>
   	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
</beans>